DUMMY INSURANCE CONTRACT - 2-WALLET TESTNET SUITE

=== WALLET REQUIREMENTS ===
Wallet 1 (Deployer/Seller): 3 AVAX
Wallet 2 (Buyer): 2 AVAX
Total Required: 5 AVAX

=== EXPECTED RECYCLING (Updated) ===
Initial: 5.3 AVAX (5.0 + 0.3 for Contract #4)
Final: ~5.8 AVAX (109% recovery)
Net Gain: +0.5 AVAX

=== FLOW SUMMARY ===
Phase 1: Deployer creates 3 contracts (reserves: 1+2+0.5 AVAX)
Phase 2: Buyer purchases all contracts (fees: 0.1+0.2+0.05 AVAX)
Phase 3: Trigger contracts #1 and #2 (price conditions met)
Phase 4: Buyer claims payouts (receives: 1+2 = 3 AVAX)
Phase 5: Contract #3 expires, deployer withdraws 0.5 AVAX
Phase 6: Test unpurchased contract - Create Contract #4, no buyer, withdraw after expiration

=== SELLER PROTECTION TEST ===
- Create contract with no buyer
- Wait for expiration
- Withdraw full reserve (0.3 AVAX)
- Verify only gas fees lost

=== DEPLOYMENT COMMANDS ===
1. Deploy: npx hardhat run scripts/deploy-2wallet.js --network fuji
2. Test: npx hardhat run scripts/testnet-2wallet.js --network fuji

=== VERIFICATION ===
- Check transactions on Snowtrace
- Verify contract states match expected values
- Confirm recycling rate above 100%